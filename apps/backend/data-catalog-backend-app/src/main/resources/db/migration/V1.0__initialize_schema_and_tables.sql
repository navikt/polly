CREATE SCHEMA IF NOT EXISTS BACKEND_SCHEMA;

CREATE SEQUENCE IF NOT EXISTS BACKEND_SCHEMA.SEQ_INFORMATION_TYPE;
CREATE SEQUENCE IF NOT EXISTS BACKEND_SCHEMA.SEQ_CODELIST;


CREATE TABLE IF NOT EXISTS BACKEND_SCHEMA.CODELIST
(
    CODELIST_ID         INTEGER DEFAULT NEXTVAL('BACKEND_SCHEMA.SEQ_CODELIST') PRIMARY KEY,
    LIST_NAME           VARCHAR(100) NOT NULL,
    CODE                VARCHAR(100) NOT NULL,
    DESCRIPTION         VARCHAR(500) NOT NULL,
    CREATED_BY          VARCHAR(200) NOT NULL,
    CREATED_DATE        TIMESTAMP NOT NULL,
    LAST_MODIFIED_BY    VARCHAR(200),
    LAST_MODIFIED_DATE  TIMESTAMP,
    UNIQUE (LIST_NAME, CODE)
);

CREATE TABLE IF NOT EXISTS BACKEND_SCHEMA.INFORMATION_TYPE
(
    INFORMATION_TYPE_ID  INTEGER DEFAULT nextval('BACKEND_SCHEMA.SEQ_INFORMATION_TYPE') PRIMARY KEY,
    NAME                 VARCHAR(100) UNIQUE NOT NULL,
    DESCRIPTION          TEXT                NOT NULL,
    CATEGORY             INTEGER             NOT NULL,
    PRODUCER             INTEGER             NOT NULL,
    SYSTEM               INTEGER             NOT NULL,
    PERSONAL_DATA        BOOLEAN             NOT NULL,
    ELASTICSEARCH_ID     TEXT,
    ELASTICSEARCH_STATUS TEXT                NOT NULL,
    CREATED_BY           VARCHAR(200) NOT NULL,
    CREATED_DATE         TIMESTAMP NOT NULL,
    LAST_MODIFIED_BY     VARCHAR(200),
    LAST_MODIFIED_DATE   TIMESTAMP,
    CONSTRAINT FK_INFO_TYPE_CODELIST_CATEGORY FOREIGN KEY (CATEGORY)
        REFERENCES CODELIST (CODELIST_ID),
    CONSTRAINT FK_INFO_TYPE_CODELIST_PRODUCER FOREIGN KEY (PRODUCER)
        REFERENCES CODELIST (CODELIST_ID),
    CONSTRAINT FK_INFO_TYPE_CODELIST_SYSTEM FOREIGN KEY (SYSTEM)
        REFERENCES CODELIST (CODELIST_ID),
);
