# APP CONFIG
server.port=8080

elasticsearch.host=35.228.12.206
elasticsearch.port=9200
elasticsearch.schema=http
elasticsearch.index=index
elasticsearch.user=user
elasticsearch.passowrd=pwd
# Inteval between running scheduled task for syncing to Elasticsearch
elasticsearch.indexing-interval-seconds=60

# DATABASE
spring.datasource.url=${POSTGRES_URL:jdbc:postgresql://localhost:5432/postgres}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=none
vault.enable=true
vault.database-backend=postgresql/${ENVIRONMENT_CLASS}-fss
vault.database-role=polly-user
vault.database-adminrole=polly-admin

# FLYWAY
spring.flyway.schemas=public
spring.flyway.baseline-on-migrate=true
spring.flyway.table=flyway_polly_history
behandlingsgrunnlag.distribute.rate.seconds=60

github.host=${GITHUB_HOST:api.github.com}
github.port=${GITHUB_PORT:-1}
github.scheme=${GITHUB_SCHEME:https}
github.webhooks-secret=${GITHUB_WEBHOOKS_SECRET:5a0924fa6403443494b24fda6a0df269}
github.key-path=/etc/secret/datajegerne
github.app-id=26100

github.status.owner=navikt
github.status.repo=pol-datasett

nais.elector.path=${ELECTOR_PATH:localhost:8080/elector}

management.endpoints.web.base-path=/internal
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.web.path-mapping.prometheus=metrics
management.endpoint.health.show-details=always
management.endpoint.security.enabled=false
management.endpoint.metrics.enabled=false
management.endpoint.prometheus.enabled=true
management.info.git.mode=simple

kafka.rest.schema-registry-url=${KAFKA_REST_SCHEMA_REGISTRY_URL:http://localhost:8085}
kafka.rest.admin-url=${KAFKA_REST_ADMIN_URL:http://localhost:8086}
kafka.rest.admin-apikey=${KAFKA_REST_ADMIN_APIKEY:secret}
kafkaindexingjob.interval.seconds=3600

azure.activedirectory.tenant-id=${AZURE_TENANT_ID:tenant-id}
azure.activedirectory.client-id=${AZURE_CLIENT_ID:client-id}
azure.activedirectory.client-secret=${AZURE_CLIENT_SECRET:client-secret}
azure.activedirectory.user-group.allowed-groups=${AZURE_CLIENT_GROUPS:teamdatajegerne}
azure.activedirectory.app-id-uri=${AZURE_APP_ID_URI:https://nav.no/datacatalogauth}
azure.activedirectory.allow-telemetry=false
azure.activedirectory.session-stateless=true
azure.activedirectory.allowed.app-id.mappings=${AZURE_ALLOWED_APP_ID_MAPPINGS:appId:thisapp,appId2:otherapp}
azure.activedirectory.token.enc.key=${AZURE_TOKEN_ENC_KEY:tokenkey}

spring.security.oauth2.client.registration.azure.client-id=${azure.activedirectory.client-id}
spring.security.oauth2.client.registration.azure.client-secret=${azure.activedirectory.client-secret}

springfox.documentation.swagger.v2.path=/swagger-docs

# Kafka
policies.fss.user=${SRV_DATA_CATALOG_POLICIES_FSS_USER:kafkauser}
policies.fss.pwd=${SRV_DATA_CATALOG_POLICIES_FSS_PWD:kafkapwd}
kafka.topics.process-update=aapen-behandlingsgrunnlag-v2
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.acks=all
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.properties.schema.registry.url=${KAFKA_SCHEMA_REGISTRY_URL:http://localhost:8082}
spring.kafka.properties.specific.avro.reader=true
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${policies.fss.user}" password="${policies.fss.pwd}";
spring.kafka.properties.ssl.truststore.location=${javax.net.ssl.trustStore}
spring.kafka.properties.ssl.truststore.password=${javax.net.ssl.trustStorePassword}
spring.kafka.properties.client-id=polly
