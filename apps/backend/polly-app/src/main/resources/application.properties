# APP CONFIG
server.port=8080
server.error.include-message=always

springfox.documentation.swagger.v2.path=/swagger-docs

#Business config
polly.default.start-date=2006-07-01

# DATABASE
spring.datasource.url=${POSTGRES_URL:jdbc:postgresql://localhost:5432/postgres}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=false
vault.enable=true
vault.database-backend=postgresql/${ENVIRONMENT_CLASS}-fss
vault.database-role=polly-user
vault.database-adminrole=polly-admin

# FLYWAY
spring.flyway.schemas=public
spring.flyway.baseline-on-migrate=true
spring.flyway.table=flyway_polly_history
behandlingsgrunnlag.distribute.rate.seconds=60

nais.elector.path=${ELECTOR_PATH:localhost:8080/elector}

management.endpoints.web.base-path=/internal
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.web.path-mapping.prometheus=metrics
management.endpoint.health.show-details=always
management.endpoint.security.enabled=false
management.endpoint.metrics.enabled=false
management.endpoint.prometheus.enabled=true
management.info.git.mode=simple

# Security
azure.activedirectory.tenant-id=${AZURE_TENANT_ID:tenant-id}
azure.activedirectory.client-id=${AZURE_CLIENT_ID:client-id}
azure.activedirectory.client-secret=${AZURE_CLIENT_SECRET:client-secret}
azure.activedirectory.app-id-uri=${AZURE_APP_ID_URI:https://nav.no/datacatalogauth}
azure.activedirectory.aadSigninUri=https://login.microsoftonline.com/
azure.activedirectory.aadKeyDiscoveryUri=https://login.microsoftonline.com/common/discovery/keys/

polly.security.allowed-app-id-mappings=${AZURE_ALLOWED_APP_ID_MAPPINGS:appId:thisapp,appId2:otherapp}
polly.security.enc-key=${AZURE_TOKEN_ENC_KEY:tokenkey}
polly.security.write-groups=${AZURE_CLIENT_GROUPS:teamdatajegerne}
polly.security.admin-groups=${AZURE_CLIENT_GROUPS_ADMIN:teamdatajegerne}
polly.security.cors-origins=http://localhost:3000

# Kafka
policies.fss.user=${SRV_DATA_CATALOG_POLICIES_FSS_USER:kafkauser}
policies.fss.pwd=${SRV_DATA_CATALOG_POLICIES_FSS_PWD:kafkapwd}
kafka.topics.process-update=aapen-behandlingsgrunnlag-v2
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.acks=all
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.properties.schema.registry.url=${KAFKA_SCHEMA_REGISTRY_URL:http://localhost:8082}
spring.kafka.properties.specific.avro.reader=true
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${policies.fss.user}" password="${policies.fss.pwd}";
spring.kafka.properties.ssl.truststore.location=${javax.net.ssl.trustStore}
spring.kafka.properties.ssl.truststore.password=${javax.net.ssl.trustStorePassword}
spring.kafka.properties.client-id=polly

# Client config
polly.client.term-catalog.enabled=true
polly.client.term-catalog.url=https://data-catalog-graph/api
polly.client.term-catalog.get-url=${polly.client.term-catalog.url}/term/prop/{termId}
polly.client.term-catalog.search-url=${polly.client.term-catalog.url}/terms/search

polly.client.teamcat-resource.enabled=true
polly.client.teamcat-team.enabled=true
polly.client.teamcat.url=https://teamcat/api
polly.client.teamcat.teams-url=${polly.client.teamcat.url}/team
polly.client.teamcat.product-areas-url=${polly.client.teamcat.url}/productarea
polly.client.teamcat.resource-url=${polly.client.teamcat.url}/resource/{ident}
polly.client.teamcat.resource-search-url=${polly.client.teamcat.url}/resource/search/{searchTerm}
