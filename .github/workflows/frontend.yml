name: Frontend

on:
  push:
    paths:
      - ".github/workflows/frontend.yml"
      - "apps/frontend/**"

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/pollyfront${{ github.ref == 'refs/heads/prod' }}:${{ github.sha }}

defaults:
  run:
    working-directory: apps/frontend

jobs:
  build:
    name: Frontend - build and push docker
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up node
        uses: actions/setup-node@v2.3.2
        with:
          node-version: '16.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/package.json') }}
      
      - name: yarn install
        run: yarn install
      - name: use prod config
        if: github.ref == 'refs/heads/prod'
        run: cp .env.prod .env
      - name: add version
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: echo "REACT_APP_GIT_VERSION=${GITHUB_SHA}" >> .env
      
      - name: Build
        run: CI=false yarn run build
      - name: Test
        run: yarn run test
      - name: Docker
        if: github.ref == 'refs/heads/prod' || github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}

  deploy-preprod:
    name: Frontend - deploy Dev FSS
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: apps/frontend/nais/frontend-fss.yaml
          VARS: apps/frontend/nais/frontend-dev-fss-vars.yaml
          ENVIRONMENT: dev-fss:teamdatajegerne:polly-frontend

  deploy-prod:
    name: Frontend - deploy Prod FSS
    needs: build
    if: github.ref == 'refs/heads/prod'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: apps/frontend/nais/frontend-fss.yaml
          VARS: apps/frontend/nais/frontend-prod-fss-vars.yaml
          ENVIRONMENT: prod-fss:teamdatajegerne:polly-frontend
