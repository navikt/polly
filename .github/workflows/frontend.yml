name: Frontend

on:
  push:
    paths:
      - ".github/workflows/frontend.yml"
      - "apps/frontend/**"

defaults:
  run:
    working-directory: apps/frontend

jobs:
  build:
    name: Frontend - build and push docker
    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write
      contents: read
      actions: read 
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
      telemetry: ${{ steps.docker-build-push.outputs.telemetry }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up node
        uses: actions/setup-node@v6
        with:
          node-version: '20.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/package.json') }}
      
      - name: yarn install
        run: yarn install
        
      - name: use prod config
        if: github.ref == 'refs/heads/prod'
        run: cp .env.prod .env

      - name: add version
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: echo "REACT_APP_GIT_VERSION=${GITHUB_SHA}" >> .env
      
      - name: Build
        run: CI=false yarn run build

      - name: Test
        run: yarn run test

      - name: Build and push
        if: github.ref == 'refs/heads/prod' || github.ref == 'refs/heads/master'
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: teamdatajegerne
          push_image: true
          image_suffix: frontend
          docker_context: ./apps/frontend
          
  deploy-dev-gcp:
    name: Frontend - deploy Dev GCP
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read 
    steps:
      - uses: actions/checkout@v5
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: apps/frontend/nais/frontend-gcp.yaml
          VARS: apps/frontend/nais/frontend-dev-gcp-vars.yaml
          ENVIRONMENT: dev-gcp:teamdatajegerne:behandlingskatalog-frontend
          WORKLOAD_IMAGE: ${{ needs.build.outputs.image }}
          TELEMETRY: ${{ needs.build.outputs.telemetry }}

  deploy-prod-gcp:
    name: Frontend - deploy Prod GCP
    needs: build
    if: github.ref == 'refs/heads/prod'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read 
    steps:
      - uses: actions/checkout@v5
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: apps/frontend/nais/frontend-gcp.yaml
          VARS: apps/frontend/nais/frontend-prod-gcp-vars.yaml
          ENVIRONMENT: prod-gcp:teamdatajegerne:behandlingskatalog-frontend
          WORKLOAD_IMAGE: ${{ needs.build.outputs.image }}
          TELEMETRY: ${{ needs.build.outputs.telemetry }}
